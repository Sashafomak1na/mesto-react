{"ast":null,"code":"import { apiConfig } from \"./constants\";\nclass Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n    this._authorization = config.headers[\"authorization\"];\n  }\n  //получить список карточек\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: {\n        authorization: this._authorization,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => this._checkResponse(res));\n  }\n\n  //получить данные пользователя\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: \"GET\",\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(res => this._checkResponse(res));\n  }\n\n  //изменить данные пользователя\n  setUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._authorization,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: data.name,\n        about: data.description\n      })\n    }).then(res => this._checkResponse(res));\n  }\n\n  //добавить новую карточку\n  addNewCards(data) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: {\n        authorization: this._authorization,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(res => this._checkResponse(res));\n  }\n\n  //добавить лайк\n  sendLike(dataId) {\n    return fetch(`${this._url}/cards/${dataId}/likes`, {\n      method: \"PUT\",\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(res => this._checkResponse(res));\n  }\n\n  //убрать лайк\n  deleteLike(dataId) {\n    return fetch(`${this._url}/cards/${dataId}/likes`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(res => this._checkResponse(res));\n  }\n\n  //удалить конкретную карточку\n  deleteCard(dataId) {\n    return fetch(`${this._url}/cards/${dataId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(res => this._checkResponse(res));\n  }\n\n  //изменить аватар\n  setUserAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._authorization,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(res => this._checkResponse(res));\n  }\n\n  //проверка ответа, вывод ошибки и  ее статус кода\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка : ${res.status}`);\n  }\n}\nexport const api = new Api(apiConfig);","map":{"version":3,"names":["apiConfig","Api","constructor","config","_url","url","_headers","headers","_authorization","getInitialCards","fetch","authorization","then","res","_checkResponse","getUserInfo","method","setUserInfo","data","body","JSON","stringify","name","about","description","addNewCards","link","sendLike","dataId","deleteLike","deleteCard","setUserAvatar","avatar","ok","json","Promise","reject","status","api"],"sources":["/Users/alekandrafomakina/Desktop/mesto-react/src/utils/api.js"],"sourcesContent":["import { apiConfig } from \"./constants\";\n\nclass Api {\n\tconstructor(config) {\n\t\tthis._url = config.url;\n\t\tthis._headers = config.headers;\n\t\tthis._authorization = config.headers[\"authorization\"];\n\t}\n\t//получить список карточек\n\tgetInitialCards() {\n\t\treturn fetch(`${this._url}/cards`, {\n\t\t\theaders: {\n\t\t\t\tauthorization: this._authorization,\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => this._checkResponse(res));\n\t}\n\n\t//получить данные пользователя\n\tgetUserInfo() {\n\t\treturn fetch(`${this._url}/users/me`, {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: {\n\t\t\t\tauthorization: this._authorization,\n\t\t\t},\n\t\t}).then((res) => this._checkResponse(res));\n\t}\n\n\t//изменить данные пользователя\n\tsetUserInfo(data) {\n\t\treturn fetch(`${this._url}/users/me`, {\n\t\t\tmethod: \"PATCH\",\n\t\t\theaders: {\n\t\t\t\tauthorization: this._authorization,\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname: data.name,\n\t\t\t\tabout: data.description,\n\t\t\t}),\n\t\t}).then((res) => this._checkResponse(res));\n\t}\n\n\t//добавить новую карточку\n\taddNewCards(data) {\n\t\treturn fetch(`${this._url}/cards`, {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\tauthorization: this._authorization,\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname: data.name,\n\t\t\t\tlink: data.link,\n\t\t\t}),\n\t\t}).then((res) => this._checkResponse(res));\n\t}\n\n\t//добавить лайк\n\tsendLike(dataId) {\n\t\treturn fetch(`${this._url}/cards/${dataId}/likes`, {\n\t\t\tmethod: \"PUT\",\n\t\t\theaders: {\n\t\t\t\tauthorization: this._authorization,\n\t\t\t},\n\t\t}).then((res) => this._checkResponse(res));\n\t}\n\n\t//убрать лайк\n\tdeleteLike(dataId) {\n\t\treturn fetch(`${this._url}/cards/${dataId}/likes`, {\n\t\t\tmethod: \"DELETE\",\n\t\t\theaders: {\n\t\t\t\tauthorization: this._authorization,\n\t\t\t},\n\t\t}).then((res) => this._checkResponse(res));\n\t}\n\n\t//удалить конкретную карточку\n\tdeleteCard(dataId) {\n\t\treturn fetch(`${this._url}/cards/${dataId}`, {\n\t\t\tmethod: \"DELETE\",\n\t\t\theaders: {\n\t\t\t\tauthorization: this._authorization,\n\t\t\t},\n\t\t}).then((res) => this._checkResponse(res));\n\t}\n\n\t//изменить аватар\n\tsetUserAvatar(data) {\n\t\treturn fetch(`${this._url}/users/me/avatar`, {\n\t\t\tmethod: \"PATCH\",\n\t\t\theaders: {\n\t\t\t\tauthorization: this._authorization,\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tavatar: data.avatar,\n\t\t\t}),\n\t\t}).then((res) => this._checkResponse(res));\n\t}\n\n\t//проверка ответа, вывод ошибки и  ее статус кода\n\t_checkResponse(res) {\n\t\tif (res.ok) {\n\t\t\treturn res.json();\n\t\t}\n\t\treturn Promise.reject(\n\t\t\t`Ошибка : ${res.status}`\n\t\t);\n\t}\n}\n\nexport const api = new Api(apiConfig);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}